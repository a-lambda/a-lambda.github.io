[
  {
    "objectID": "sql.html",
    "href": "sql.html",
    "title": "SQL",
    "section": "",
    "text": "La table prise pour exemple sera la table elu composées des champs suivants :\n\nelu_id (primary key)\nelu_nom\nelu_prenom\nelu_date_naissance\nelu_lieu_naissance\nelu_genre\n\nNous pouvons identifier les doublons comme suit :\n\nSELECT elu_nom, elu_prenom, elu_date_naissance, elu_lieu_naissance, elu_genre, COUNT(*) FROM elu \nGROUP BY elu_nom, elu_prenom, elu_date_naissance, elu_lieu_naissance, elu_genre \nHAVING COUNT(*) &gt; 1; \n\n\n\n\n\n\n\nNote\n\n\n\n\n\n3 méthodes possibles pour supprimer les doublons\n\n\n\n\nsuppression depuis un INNER JOIN (USING avec postgresql)\n\n\n\nDELETE FROM elu e1\nUSING elu e2\nWHERE e1.elu_nom = e2.elu_nom\n  AND e1.elu_prenom = e2.elu_prenom\n  AND e1.elu_date_naissance = e2.elu_date_naissance\n  AND e1.elu_lieu_naissance = e2.elu_lieu_naissance\n  AND e1.elu_genre = e2.elu_genre \n  AND e1.elu_id &lt; e2.elu_id;\n\n\n\n\n\n\n\nImportant\n\n\n\n\n\nCette méthode ne marche pas s’il n’existe pas d’index (comme elu_id ici)\n\n\n\n\nLa deuxième méthode consiste à\n\n- recréer une table identique\n\nCREATE TABLE IF NOT EXISTS new_elu (\n  elu_id SERIAL PRIMARY KEY,\n  elu_nom VARCHAR(50) NOT NULL,\n  elu_prenom VARCHAR(50) NOT NULL,\n  elu_date_naissance DATE NOT NULL,\n  elu_lieu_naissance VARCHAR(50),\n  elu_genre genre NOT NULL\n  );\n\n- copier une version unique de chaque enregistrement\n\n  a. première méthode\n\nINSERT INTO new_elu (elu_nom, elu_prenom, elu_date_naissance, elu_lieu_naissance, elu_genre)\nSELECT elu_nom, elu_prenom, elu_date_naissance, elu_lieu_naissance, elu_genre \nFROM elu \nGROUP BY elu_nom, elu_prenom, elu_date_naissance, elu_lieu_naissance, elu_genre;\n\n  b. deuxième méthode avec DISTINCT\n\nINSERT INTO new_elu (elu_nom, elu_prenom, elu_date_naissance, elu_lieu_naissance, elu_genre)\nSELECT DISTINCT elu_nom, elu_prenom, elu_date_naissance, elu_lieu_naissance, elu_genre\nFROM elu;\n\n- supprimer la table initiale\n\nDROP table elu;\n\n\nrenommer la copie\n\n\nALTER table new_elu\nRENAME TO elu;\n\n\nla methode consiste à utiliser la fonction ROW_NUMBER()\n\n\nDELETE FROM elu\nWHERE elu_id IN (\n  SELECT elu_id\n  FROM (\n    SELECT elu_id,\n    ROW_NUMBER() OVER(PARTITION BY elu_nom, elu_prenom, elu_date_naissance, elu_lieu_naissance, elu_genre) AS rownum\n    FROM elu\n  ) AS sub\n  WHERE rownum &gt; 1\n);"
  },
  {
    "objectID": "sql.html#i.-comment-supprimer-les-doublons-dune-table",
    "href": "sql.html#i.-comment-supprimer-les-doublons-dune-table",
    "title": "SQL",
    "section": "",
    "text": "La table prise pour exemple sera la table elu composées des champs suivants :\n\nelu_id (primary key)\nelu_nom\nelu_prenom\nelu_date_naissance\nelu_lieu_naissance\nelu_genre\n\nNous pouvons identifier les doublons comme suit :\n\nSELECT elu_nom, elu_prenom, elu_date_naissance, elu_lieu_naissance, elu_genre, COUNT(*) FROM elu \nGROUP BY elu_nom, elu_prenom, elu_date_naissance, elu_lieu_naissance, elu_genre \nHAVING COUNT(*) &gt; 1; \n\n\n\n\n\n\n\nNote\n\n\n\n\n\n3 méthodes possibles pour supprimer les doublons\n\n\n\n\nsuppression depuis un INNER JOIN (USING avec postgresql)\n\n\n\nDELETE FROM elu e1\nUSING elu e2\nWHERE e1.elu_nom = e2.elu_nom\n  AND e1.elu_prenom = e2.elu_prenom\n  AND e1.elu_date_naissance = e2.elu_date_naissance\n  AND e1.elu_lieu_naissance = e2.elu_lieu_naissance\n  AND e1.elu_genre = e2.elu_genre \n  AND e1.elu_id &lt; e2.elu_id;\n\n\n\n\n\n\n\nImportant\n\n\n\n\n\nCette méthode ne marche pas s’il n’existe pas d’index (comme elu_id ici)\n\n\n\n\nLa deuxième méthode consiste à\n\n- recréer une table identique\n\nCREATE TABLE IF NOT EXISTS new_elu (\n  elu_id SERIAL PRIMARY KEY,\n  elu_nom VARCHAR(50) NOT NULL,\n  elu_prenom VARCHAR(50) NOT NULL,\n  elu_date_naissance DATE NOT NULL,\n  elu_lieu_naissance VARCHAR(50),\n  elu_genre genre NOT NULL\n  );\n\n- copier une version unique de chaque enregistrement\n\n  a. première méthode\n\nINSERT INTO new_elu (elu_nom, elu_prenom, elu_date_naissance, elu_lieu_naissance, elu_genre)\nSELECT elu_nom, elu_prenom, elu_date_naissance, elu_lieu_naissance, elu_genre \nFROM elu \nGROUP BY elu_nom, elu_prenom, elu_date_naissance, elu_lieu_naissance, elu_genre;\n\n  b. deuxième méthode avec DISTINCT\n\nINSERT INTO new_elu (elu_nom, elu_prenom, elu_date_naissance, elu_lieu_naissance, elu_genre)\nSELECT DISTINCT elu_nom, elu_prenom, elu_date_naissance, elu_lieu_naissance, elu_genre\nFROM elu;\n\n- supprimer la table initiale\n\nDROP table elu;\n\n\nrenommer la copie\n\n\nALTER table new_elu\nRENAME TO elu;\n\n\nla methode consiste à utiliser la fonction ROW_NUMBER()\n\n\nDELETE FROM elu\nWHERE elu_id IN (\n  SELECT elu_id\n  FROM (\n    SELECT elu_id,\n    ROW_NUMBER() OVER(PARTITION BY elu_nom, elu_prenom, elu_date_naissance, elu_lieu_naissance, elu_genre) AS rownum\n    FROM elu\n  ) AS sub\n  WHERE rownum &gt; 1\n);"
  },
  {
    "objectID": "sql.html#ii.-postgresql-interesting-commands",
    "href": "sql.html#ii.-postgresql-interesting-commands",
    "title": "SQL",
    "section": "II. PostgreSQL interesting commands",
    "text": "II. PostgreSQL interesting commands\n\nREASSIGN OWNED BY &lt;old_role&gt; to &lt;new_role&gt;;\nREVOKE ALL PRIVILEGES ON DATABASE &lt;database&gt; FROM &lt;role&gt;;"
  },
  {
    "objectID": "sql.html#iii.-tests-de-connexion-à-une-base-de-données",
    "href": "sql.html#iii.-tests-de-connexion-à-une-base-de-données",
    "title": "SQL",
    "section": "III. Tests de connexion à une base de données",
    "text": "III. Tests de connexion à une base de données\n\nlibrary(RPostgres)\nlibrary(tibble)\n\nDB_HOSTNAME &lt;- Sys.getenv(\"DB_HOSTNAME\")\nDB_NAME &lt;- Sys.getenv(\"DB_NAME\")\nDB_PORT &lt;- Sys.getenv(\"DB_PORT\")\nDB_USER &lt;- Sys.getenv(\"DB_USER\")\nDB_PASSWORD &lt;- Sys.getenv(\"DB_PASSWORD\")\n\nconn &lt;- RPostgres::dbConnect(\n  drv = RPostgres::Postgres(), \n  dbname = DB_NAME,\n  host = DB_HOSTNAME,\n  port = DB_PORT,\n  user = DB_USER,\n  password = DB_PASSWORD)\n\nRPostgres::dbSendQuery(\n  conn,\n  \"ALTER DATABASE alcor SET SEARCH_PATH TO rne\n  ;\"\n)\n\n&lt;PqResult&gt;\n  SQL  ALTER DATABASE alcor SET SEARCH_PATH TO rne\n  ;\n  ROWS Fetched: 0 [complete]\n       Changed: 0\n\nRPostgres::dbListTables(conn)\n\nWarning: Closing open result set, cancelling previous query\n\n\n[1] \"csp\" \"elu\"\n\nresult &lt;- RPostgres::dbGetQuery(\n  conn, \n  \"SELECT elu_genre, elu_nom, elu_prenom, UPPER(elu_lieu_naissance) \n  FROM rne.elu \n  WHERE elu_date_naissance = '1967-04-19' \n  ORDER BY elu_genre, elu_nom, elu_prenom;\")\n\nprint(result)\n\n   elu_genre       elu_nom     elu_prenom              upper\n1          F       BEUGNET        Ginette              ARRAS\n2          F         BOYER       Patricia               AGEN\n3          F       BRUNEAU      Catherine              PARIS\n4          F       CARISEY        Valérie      SAINT-VALLIER\n5          F     DELAURIER  Sylvie Nicole           TONNEINS\n6          F       GARNIER        Corinne    LE PUY EN VELAY\n7          F     LABRUGERE        Martine             CANNES\n8          F      LACRESSE     Christelle              NANCY\n9          F        LAVEST       Isabelle           AURILLAC\n10         F      LEPOUTRE     Anne-Marie              REIMS\n11         F      LIGAUDAN Laure Isabelle      MAISON-ALFORT\n12         F       MAILLOT         Karine             DRANCY\n13         F         PAOLI         Muriel               ALES\n14         F       PFISTER        Monique          INGWILLER\n15         F    QUATREVAUX         Muriel             RENNES\n16         F        SCHULD        Adeline          PARIS 17E\n17         F         TALVA          Nelly           FOUGÈRES\n18         M      BARDELLE     Christophe               CAEN\n19         M     BERENGUER          Hervé            BÉZIERS\n20         M      BERNADET         Pascal                DAX\n21         M       BERRARD           Eric    LONS LE SAUNIER\n22         M        BOIRET          Alain         CHÂTEAUDUN\n23         M         BORDE       Philippe       BAR SUR AUBE\n24         M    BUCHHOLZER         Fabien             BITCHE\n25         M       CARTIER       Frédéric             LANGON\n26         M     CERQUEIRA      Christian              MACON\n27         M DEVALQUENAIRE           Eric             AMIENS\n28         M        FUCHET       François         LE CREUSOT\n29         M       GRASSET        Laurent              NIMES\n30         M          GROS          Serge       LA BOISSIERE\n31         M     JEANDARME        Francis   NOGENT SUR SEINE\n32         M       JEANNEY        Patrick               AGEN\n33         M      LE QUÉRÉ        Antoine            PONTIVY\n34         M          LEVY          Hervé           BESANCON\n35         M        MANUEL        Thierry               &lt;NA&gt;\n36         M        MAYEUX        Laurent       BETHUNE (62)\n37         M         PINEL       Emmanuel LES GRANDES VENTES\n38         M     PRODHOMME         Daniel  NOYAL SUR VILAINE\n39         M        TRAORE            Yan            ABIDJAN\n40         M      VALADIER           Eddy  SAINT GILLES (30)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "The chance",
    "section": "",
    "text": "Email\n  \n  \n    \n     Github\n  \n\n  \n  \nI’m interested in spatial statistics\n\nr-spatial-website\nsf package\n\nand in ggplot2 extensions"
  },
  {
    "objectID": "animate_plot.html",
    "href": "animate_plot.html",
    "title": "Animate plots",
    "section": "",
    "text": "1. Exemple d’animation\n\nggplot(mpg) +\n  geom_bar(aes(x = factor(cyl))) +\n  labs(title = 'Number of cars in {closest_state} by number of cylinders') +\n  transition_states(states = year) +\n  enter_grow() +\n exit_fade()"
  },
  {
    "objectID": "howto.html",
    "href": "howto.html",
    "title": "How-To Github",
    "section": "",
    "text": "Ce document est basée sur cette vidéo Youtube en anglais\nLes pages Github (https://pages.github.com/) sont une fonctionnalité offerte par Github qui permet d’héberger votre site Web personnel ainsi que vos projets.\nL’hébergement s’effectue dans votre dépôt (ou repository), ce qui vous permet de :\n\nconserver un dépôt git pour votre site Web\npousser (push) des changements dans votre site Web vers Github\nvisualiser presque instantanément les changements de votre site dans Github\n\nSi votre nom d’utilisateur Github est username et que votre site Web est contenu dans le dépôt demositealors le rendu de votre site Web sera disponible à l’adresse https://username.github.io/demosite/.\nSi vous créer un site Web personnel, il est préférable de l’héberger à l’adresse https://username.github.io.\n\n\n\n\n\nDans R Studio,\n\n\nDepuis le menu File, click -&gt; New Project\nSélectionner New Directory -&gt; Quarto website\nChoisir un nom de répertoire\n\n\ns’il s’agit du site web personnel hébergé sur Github il faudra choisir comme nom de répertoire username.github.io, username représentant votre nom d’utilisateur Github. Le résultat sera visible à l’adresse https://username.github.io\ns’il s’agit d’un site relatif à un projet hébergé sur Github, il faudra choisir comme nom de répertoire name qui représentera le nom de votre projet. Le résultat sera visible à l’adresse https://username.github.io/name/.\n\nUn exemple est donné ici Figure 1\n\n\n\n\n\n\nFigure 1: Configuration du projet de site Web Quarto\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nNe pas oublier de cocher l’option Create a git repository pour la gestion des versions de votre site. Git aura été préalablement installé depuis https://git-scm.com/downloads\n\n\n\n\n\n\nse loguer dans Github\nDepuis la page principale, créer un dépôt Github.\n\nPour votre site web personnel, le dépôt devra s’appeler username.github.io. Il faudra bien sûr remplacer usernamepar votre nom d’utilisateur Github et sélectionner l’option Public pour que le site soit visible par tous (cf. Figure 2)\nPour héberger un projet, le dépôt, si vous décider de l’appeler projet, apparaîtra à l’adresse https://username.github.io/projet (cf. Figure 3).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 2: Configuration pour site web personnel\n\n\n\n\n\n\n\n\n\n\n\nFigure 3: Configuration pour un site projet\n\n\n\n\n\n\n\n\n\n\nsélectionner l’onglet settings relatif au projet et cliquer sur Pages\nDans la section Build and deployment sélectionner la branche main et le répertoire /docs dans lequel figurent l’ensemble des fichiers constituant le site web (cf Figure 4)\n\n\n\n\n\n\n\nFigure 4: Configuration de déploiement du site\n\n\n\nLa ligne “Your site live at https://a-lambda.github.io” permet de vérifier que le rendu du site s’est correctement effectué. Un clic sur le bouton Visit site permet d’apprécier le résultat."
  },
  {
    "objectID": "howto.html#publication-dun-document-quarto-sur-github",
    "href": "howto.html#publication-dun-document-quarto-sur-github",
    "title": "How-To Github",
    "section": "",
    "text": "Ce document est basée sur cette vidéo Youtube en anglais\nLes pages Github (https://pages.github.com/) sont une fonctionnalité offerte par Github qui permet d’héberger votre site Web personnel ainsi que vos projets.\nL’hébergement s’effectue dans votre dépôt (ou repository), ce qui vous permet de :\n\nconserver un dépôt git pour votre site Web\npousser (push) des changements dans votre site Web vers Github\nvisualiser presque instantanément les changements de votre site dans Github\n\nSi votre nom d’utilisateur Github est username et que votre site Web est contenu dans le dépôt demositealors le rendu de votre site Web sera disponible à l’adresse https://username.github.io/demosite/.\nSi vous créer un site Web personnel, il est préférable de l’héberger à l’adresse https://username.github.io.\n\n\n\n\n\nDans R Studio,\n\n\nDepuis le menu File, click -&gt; New Project\nSélectionner New Directory -&gt; Quarto website\nChoisir un nom de répertoire\n\n\ns’il s’agit du site web personnel hébergé sur Github il faudra choisir comme nom de répertoire username.github.io, username représentant votre nom d’utilisateur Github. Le résultat sera visible à l’adresse https://username.github.io\ns’il s’agit d’un site relatif à un projet hébergé sur Github, il faudra choisir comme nom de répertoire name qui représentera le nom de votre projet. Le résultat sera visible à l’adresse https://username.github.io/name/.\n\nUn exemple est donné ici Figure 1\n\n\n\n\n\n\nFigure 1: Configuration du projet de site Web Quarto\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nNe pas oublier de cocher l’option Create a git repository pour la gestion des versions de votre site. Git aura été préalablement installé depuis https://git-scm.com/downloads\n\n\n\n\n\n\nse loguer dans Github\nDepuis la page principale, créer un dépôt Github.\n\nPour votre site web personnel, le dépôt devra s’appeler username.github.io. Il faudra bien sûr remplacer usernamepar votre nom d’utilisateur Github et sélectionner l’option Public pour que le site soit visible par tous (cf. Figure 2)\nPour héberger un projet, le dépôt, si vous décider de l’appeler projet, apparaîtra à l’adresse https://username.github.io/projet (cf. Figure 3).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 2: Configuration pour site web personnel\n\n\n\n\n\n\n\n\n\n\n\nFigure 3: Configuration pour un site projet\n\n\n\n\n\n\n\n\n\n\nsélectionner l’onglet settings relatif au projet et cliquer sur Pages\nDans la section Build and deployment sélectionner la branche main et le répertoire /docs dans lequel figurent l’ensemble des fichiers constituant le site web (cf Figure 4)\n\n\n\n\n\n\n\nFigure 4: Configuration de déploiement du site\n\n\n\nLa ligne “Your site live at https://a-lambda.github.io” permet de vérifier que le rendu du site s’est correctement effectué. Un clic sur le bouton Visit site permet d’apprécier le résultat."
  },
  {
    "objectID": "quarto_website.html",
    "href": "quarto_website.html",
    "title": "Création d’un site Web Quarto sur Github",
    "section": "",
    "text": "1. Introduction\nCe document est basée sur cette série de vidéos Youtube en anglais produite par Joshua French\nLes pages Github (https://pages.github.com/) sont une fonctionnalité offerte par Github qui permet d’héberger votre site Web personnel ainsi que vos projets.\nL’hébergement s’effectue dans votre dépôt (ou repository), ce qui vous permet de :\n\nconserver un dépôt git pour votre site Web\npousser (push) des changements dans votre site Web vers Github\nvisualiser presque instantanément les changements de votre site dans Github\n\nSi votre nom d’utilisateur Github est username et que votre site Web est contenu dans le dépôt demositealors le rendu de votre site Web sera disponible à l’adresse https://username.github.io/demosite/.\nSi vous créer un site Web personnel, il est préférable de l’héberger à l’adresse https://username.github.io.\n\n\n\n2. Création d’un site Web Quarto\n\nDans R Studio,\n\n\nDepuis le menu File, click -&gt; New Project\nSélectionner New Directory -&gt; Quarto website\nChoisir un nom de répertoire\n\n\ns’il s’agit du site web personnel hébergé sur Github il faudra choisir comme nom de répertoire username.github.io, username représentant votre nom d’utilisateur Github. Le résultat sera visible à l’adresse https://username.github.io\ns’il s’agit d’un site relatif à un projet hébergé sur Github, il faudra choisir comme nom de répertoire name qui représentera le nom de votre projet. Le résultat sera visible à l’adresse https://username.github.io/name/.\n\nUn exemple est donné ici Figure 1\n\n\n\n\n\n\nFigure 1: Configuration du projet de site Web Quarto\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nNe pas oublier de cocher l’option Create a git repository pour la gestion des versions de votre site. Git aura été préalablement installé depuis https://git-scm.com/downloads\n\n\n6 fichiers vont être automatiquement créés :\n\n_quarto.yaml, qui permet le paramétrage global du site Web\n.gitignore identifie les fichiers et répertoire à ignorer par git\nindex.qmd est le fichier associé à la page défaut du site Web\nabout.qmd est une page démo associée à la page principale\n&lt;nom du projet&gt;.Rproj est le fichier projet R associé au site Web\nstyles.css est le nom de la feuille de styles par défaut\n\nSur le site de Quarto une section est dédiée au paramétrage des Options de site Web\n\n\n\n3. Modification du répertoire ‘output’ du site Web\nLe répertoire output est le lieu où sont stockés les fichiers de rendu du site. Pour héberger votre site Web Quarto en utilisant la fonctionnalité “Github pages” il est préférable de modifier le répertoire output en “docs” (par défaut le répertoire output a pour valeur “_site”.)\nPour ce faire, il faut :\n\nsélectionner le fichier _quarto.yml\najouter la ligne output-dir: docs sous type: website\n\n\n\n\n\n\n\nFigure 2: Modification du répertoire output\n\n\n\n\n\n\n4. Création du dépôt Github\n\nse loguer dans Github\nDepuis la page principale, créer un dépôt Github.\n\nPour votre site web personnel, le dépôt devra s’appeler username.github.io. Il faudra bien sûr remplacer usernamepar votre nom d’utilisateur Github et sélectionner l’option Public pour que le site soit visible par tous (cf. Figure 3)\nPour héberger un projet, le dépôt, si vous décider de l’appeler projet, apparaîtra à l’adresse https://username.github.io/projet (cf. Figure 4).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 3: Configuration pour site web personnel\n\n\n\n\n\n\n\n\n\n\n\nFigure 4: Configuration pour un site projet\n\n\n\n\n\n\n\n\n\n5. Déploiement du site web sur Github\n\nsélectionner l’onglet settings relatif au projet et cliquer sur Pages\nDans la section Build and deployment sélectionner la branche main et le répertoire /docs dans lequel figurent l’ensemble des fichiers constituant le site web (cf Figure 5)\n\n\n\n\n\n\n\nFigure 5: Configuration de déploiement du site\n\n\n\nLa ligne “Your site live at https://a-lambda.github.io” permet de vérifier que le rendu du site s’est correctement effectué. Un clic sur le bouton Visit site permet d’apprécier le résultat."
  }
]